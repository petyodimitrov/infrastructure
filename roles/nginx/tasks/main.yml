- name: create config dirs
  file:
    dest: "{{ item }}"
    state: directory
    recurse: yes
  with_items:
    - "{{ nginx_config_dir }}/conf.d"
    - "{{ nginx_config_dir }}/ssl"
    - "{{ nginx_config_dir }}/sites"

- name: generate Diffie Hellman parameter
  command: >
    openssl dhparam -out {{ nginx_config_dir }}/ssl/dhparam.pem {{ nginx_dhparam_size }}
  args:
    creates: "{{ nginx_config_dir }}/ssl/dhparam.pem"

- name: cleanup legacy Diffie Hellman parameter
  file:
    path: /etc/ssl/dhparam.pem
    state: absent

- name: create main conf
  notify: restart nginx
  copy:
    src: nginx.conf
    dest: "{{ nginx_config_dir }}/nginx.conf"

- name: create conf partials
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_config_dir }}/conf.d/{{ item }}"
  with_items:
    - cache_static.server
    - disable_favicon_logging.server
    - disable_hidden.server
    - disable_robots_logging.server
    - gzip.http
    - https.http
    - log.http
    - microcache.http
    - proxy.http
    - ssl.http

- name: ensure Docker network exists
  shell: >
    docker network inspect {{ nginx_net }} ||
    docker network create {{ nginx_net }}

- name: get network gateway
  register: docker_network_gateway
  shell: >
    docker network inspect {{ nginx_net }} | jq -r ".[0].IPAM.Config[0].Gateway" | awk -F '/' '{ print $1 }'

- name: debug docker_network_gateway
  when: debug | default(false)
  debug:
    var: docker_network_gateway

- name: create default vhost
  notify: reload nginx
  template:
    src: default.site.j2
    dest: "{{ nginx_config_dir }}/sites/default.site"

- name: ensure container image exists
  shell: >
    docker pull nginx:{{ nginx_version }}

- name: ensure container is running
  docker:
    name: "nginx.{{ nginx_net }}"
    image: "nginx:{{ nginx_version }}"
    pull: missing
    state: reloaded
    restart_policy: always
    net: "{{ nginx_net }}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - "{{ nginx_config_dir }}/cache:/usr/share/nginx/cache:rw"
      - "{{ nginx_config_dir }}/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "{{ nginx_config_dir }}/conf.d:/etc/nginx/conf.d:ro"
      - "{{ nginx_config_dir }}/ssl:/etc/nginx/ssl:ro"
      - "{{ nginx_config_dir }}/sites:/etc/nginx/sites:ro"
      - "{{ web_volume_path }}:/var/www:ro"
    log_driver: syslog
    log_opt:
      syslog-address: "{{ papertrail_log_destination }}"
      tag: "nginx.{{ nginx_net }}"

- name: nginx_status http response
  register: nginx_status
  shell: >
    curl --connect-timeout 3 -v http://localhost/nginx_status

- name: debug nginx_status
  when: debug | default(false)
  debug:
    var: nginx_status

- name: check nginx_status
  assert:
    that:
      - "'Host: localhost' in nginx_status.stderr"
      - "'HTTP/1.1 200 OK' in nginx_status.stderr"
      - "'Server: nginx' in nginx_status.stderr"
      - "'Active connections:' in nginx_status.stdout"
