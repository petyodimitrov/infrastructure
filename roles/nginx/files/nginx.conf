#/* vim: set ft=cfg : */

# Run workers under this user
user www-data;

# Set to the number of CPU cores, autodect them
worker_processes auto;

# Number of file descriptors used per nginx worker
worker_rlimit_nofile 100000;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  # Determines how many clients will be served by each worker process.
  # (Max clients = worker_connections * worker_processes)
  # "Max clients" is also limited by the number of socket connections available on the system (~64k)
  worker_connections 1024;

  # Accept as many connections as possible, after nginx gets notification about a new connection.
  # May flood worker_connections, if that option is set too low.
  multi_accept on;
}

http {
  # Sendfile copies data between one FD and other from within the kernel.
  # More efficient than read() + write(), since the requires transferring data to and from the user space.
  sendfile on;
  sendfile_max_chunk 1m; # stop fast connections from clogging us up

  # Send HTTP response header in one packet instead of using partial frames.
  # This is useful for prepending headers before calling sendfile or for throughput optimization.
  tcp_nopush on;

  # Don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
  tcp_nodelay on;

  # Timeout for keep-alive connections. Server will close connections after this time.
  keepalive_timeout 30;

  # Allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
  reset_timedout_connection on;

  types_hash_max_size 2048;

  # Don't send any server info in the headers, only "nginx"
  server_tokens off;

  server_names_hash_bucket_size 64;

  # Send the client a "request timed out" if the body is not loaded by this time.
  client_body_timeout 30;

  # If the client stops reading data, free up the stale client connection after this much time. Default 60.
  send_timeout 10;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  include /etc/nginx/conf.d/*.http;
  include /etc/nginx/sites/*.site;
}
