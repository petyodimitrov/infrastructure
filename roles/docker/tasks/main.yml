- name: fail if not a new release of Ubuntu
  fail: msg="{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"
  when: ansible_distribution_version not in ["16.04", "18.04"]

- name: upload GPG key
  copy: src=docker.gpg dest=/tmp/docker.gpg

- name: add GPG key to apt
  apt_key: file=/tmp/docker.gpg state=present

- name: cleanup GPG key
  file: dest=/tmp/docker.gpg state=absent

- name: add new apt repository
  apt_repository: repo="{{ docker_apt_repository }}" update_cache=yes

- name: install pip
  package:
    name: python-pip
    state: present

- name: update pip to latest
  command: pip install --upgrade pip

- name: uninstall docker-py
  pip:
    name: docker-py
    state: absent

- name: install Python bindings
  pip:
    executable: /usr/local/bin/pip
    name: docker
    version: "{{ docker_version }}"
    state: present

- name: pin docker version
  copy:
    dest: /etc/apt/preferences.d/pin-docker-engine
    content: |
      Package: docker-ce
      Pin: version {{ docker_version }}*
      Pin-Priority: 1000

- name: install package
  apt: name="docker-ce={{ docker_version }}*"

- name: ensure docker group exists
  group:
    name: docker
    state: present

- name: start docker on boot
  service: name=docker state=started enabled=yes

- name: setup shell helpers
  copy: src=docker.sh dest=/etc/profile.d/docker.sh
        mode=0644 owner=root group=root

- include: logrotation.yml
