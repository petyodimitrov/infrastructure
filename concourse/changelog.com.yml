resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: infrastructure
    type: git
    source:
      uri: git@github.com:thechangelog/infrastructure.git
      branch: master
      private_key: {{concourse_ssh_private_key}}

  - name: ansible-dockerfile
    type: git
    source:
      uri: git@github.com:thechangelog/infrastructure.git
      branch: master
      private_key: {{concourse_ssh_private_key}}
      paths:
        - roles/concourse/files/docker/ansible/**

  - name: assets-dockerfile
    type: git
    source:
      uri: git@github.com:thechangelog/infrastructure.git
      branch: master
      private_key: {{concourse_ssh_private_key}}
      paths:
        - roles/dotcom/files/docker/assets/**

  - name: runtime-dockerfile
    type: git
    source:
      uri: git@github.com:thechangelog/infrastructure.git
      branch: master
      private_key: {{concourse_ssh_private_key}}
      paths:
        - roles/dotcom/files/docker/runtime/**

  - name: dotcom
    type: git
    source:
      uri: git@github.com:thechangelog/changelog.com.git
      branch: master
      private_key: {{concourse_ssh_private_key}}

  - name: daily
    type: time
    source:
      interval: 24h

  - name: slack
    type: slack-notification
    source:
      url: {{slack_webhook}}

  - name: assets-image
    type: docker-image
    source:
      repository: thechangelog/assets
      tag: node6.11.5-yarn0.19.1
      username: {{dockerhub_user}}
      password: {{dockerhub_pass}}

  - name: runtime-image
    type: docker-image
    source:
      repository: thechangelog/runtime
      tag: elixir1.6.5-ffmpeg-20180629
      username: {{dockerhub_user}}
      password: {{dockerhub_pass}}

  - name: ansible-image
    type: docker-image
    source:
      repository: thechangelog/ansible
      tag: 2.5.0
      username: {{dockerhub_user}}
      password: {{dockerhub_pass}}

jobs:
  - name: backup
    serial_groups:
      - backup
    plan:
      - get: infrastructure
      - get: daily
        trigger: true
      - task: dotcom
        file: infrastructure/concourse/play.yml
        params:
          ANSIBLE_PLAYBOOK: dotcom.yml -t dotcom_backup -e dotcom_backup=true
          CONCOURSE_SSH_PRIVATE_KEY: {{concourse_ssh_private_key}}
          SSH_KNOWN_HOSTS: {{ssh_known_hosts}}
          DOTCOM_BACKUP_AWS_REGION: {{dotcom_backup_aws_region}}
          DOTCOM_BACKUP_S3_BUCKET: {{dotcom_backup_s3_bucket}}
          DOTCOM_BACKUP_AWS_ACCESS_KEY_ID: {{dotcom_backup_aws_access_key_id}}
          DOTCOM_BACKUP_AWS_SECRET_ACCESS_KEY: {{dotcom_backup_aws_secret_access_key}}
          PG_DOTCOM_PASS: {{postgres_admin_pass}}

  - name: configure
    serial_groups:
      - backup
    plan:
      - do:
        - aggregate:
          - get: infrastructure
            trigger: true
          - get: daily
            trigger: true
            passed:
              - backup
        - task: default
          file: infrastructure/concourse/play.yml
          params:
            ANSIBLE_PLAYBOOK: default.yml
            CONCOURSE_SSH_PRIVATE_KEY: {{concourse_ssh_private_key}}
            SSH_KNOWN_HOSTS: {{ssh_known_hosts}}
            AUTHORIZED_KEYS: {{authorized_keys}}
            HTTPS_CERT: {{changelog_https_cert}}
            HTTPS_KEY: {{changelog_https_key}}
            HTTPS_CHAIN: {{changelog_https_chain}}
            DNSIMPLE_EMAIL: {{dnsimple_email}}
            DNSIMPLE_API_TOKEN: {{dnsimple_api_token}}
            PG_DOTCOM_PASS: {{postgres_admin_pass}}
            PG_CONCOURSE_PASS: {{postgres_concourse_pass}}
        - task: concourse
          file: infrastructure/concourse/play.yml
          params:
            ANSIBLE_PLAYBOOK: concourse.yml
            CONCOURSE_SSH_PRIVATE_KEY: {{concourse_ssh_private_key}}
            CONCOURSE_AUTH_PASS: {{concourse_auth_pass}}
            SSH_KNOWN_HOSTS: {{ssh_known_hosts}}
            PG_CONCOURSE_PASS: {{postgres_concourse_pass}}
        on_failure:
          put: slack
          params:
            text: hosts configuration failed https://ci.changelog.com/teams/main/pipelines/changelog.com
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
            username: concourse

  - name: deploy
    serial_groups:
      - backup
    plan:
      - do:
        - aggregate:
          - get: infrastructure
            trigger: true
          - get: dotcom
            trigger: true
          - get: daily
            trigger: true
            passed:
              - configure
        - task: deploy dotcom
          file: infrastructure/concourse/play.yml
          params:
            ANSIBLE_PLAYBOOK: dotcom.yml
            CONCOURSE_SSH_PRIVATE_KEY: {{concourse_ssh_private_key}}
            SSH_KNOWN_HOSTS: {{ssh_known_hosts}}
            DOTCOM_BACKUP_AWS_REGION: {{dotcom_backup_aws_region}}
            DOTCOM_BACKUP_S3_BUCKET: {{dotcom_backup_s3_bucket}}
            DOTCOM_BACKUP_AWS_ACCESS_KEY_ID: {{dotcom_backup_aws_access_key_id}}
            DOTCOM_BACKUP_AWS_SECRET_ACCESS_KEY: {{dotcom_backup_aws_secret_access_key}}
            PG_DOTCOM_PASS: {{postgres_admin_pass}}
            CM_SMTP_TOKEN: {{campaign_monitor_smtp_token}}
            CM_API_TOKEN: {{campaign_monitor_api_token}}
            GITHUB_CLIENT_ID: {{github_client_id}}
            GITHUB_CLIENT_SECRET: {{github_client_secret}}
            GITHUB_API_TOKEN: {{github_api_token}}
            TWITTER_CONSUMER_KEY: {{twitter_consumer_key}}
            TWITTER_CONSUMER_SECRET: {{twitter_consumer_secret}}
            AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
            SLACK_INVITE_API_TOKEN: {{slack_invite_api_token}}
            SLACK_APP_API_TOKEN: {{slack_app_api_token}}
            SECRET_KEY_BASE: {{secret_key_base}}
            SIGNING_SALT: {{signing_salt}}
            ROLLBAR_ACCESS_TOKEN: {{rollbar_access_token}}
            BUFFER_TOKEN: {{buffer_token}}
            ALGOLIA_APPLICATION_ID: {{algolia_application_id}}
            ALGOLIA_API_KEY: {{algolia_api_key}}
        on_success:
            put: slack
            params:
              text: "production deploy success! :rocket:"
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: concourse
        on_failure:
            put: slack
            params:
              text: "production deploy failed :scream: https://ci.changelog.com/teams/main/pipelines/changelog.com"
              icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
              username: concourse

  - name: build-assets
    plan:
      - get: assets-dockerfile
        trigger: true
      - put: assets-image
        params:
          build: assets-dockerfile/roles/dotcom/files/docker/assets

  - name: build-runtime
    plan:
      - get: runtime-dockerfile
        trigger: true
      - put: runtime-image
        params:
          build: runtime-dockerfile/roles/dotcom/files/docker/runtime

  - name: build-ansible
    plan:
      - get: ansible-dockerfile
        trigger: true
      - put: ansible-image
        params:
          build: ansible-dockerfile/roles/concourse/files/docker/ansible
